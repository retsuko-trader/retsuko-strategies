syntax = "proto3";

import "google/protobuf/timestamp.proto";

service GStrategyLoader {
  rpc GetStrategies (Empty) returns (StrategyList);
}

message Empty {}

message StrategyList {
  repeated GStrategy strategies = 1;
}

message GStrategy {
  string name = 1;
  string config = 2;
}

service GStrategyRunner {
  rpc Run(stream StrategyInput) returns (stream StrategyOutput);
}

message StrategyInput {
  oneof type {
    StrategyInputCreate create = 1;
    StrategyInputPreload preload = 2;
    StrategyInputUpdate update = 3;
  }
}

message StrategyInputCreate {
  string name = 1;
  string config = 2;
  optional string state = 3;
}

message StrategyInputPreload {
  Candle candle = 1;
}

message StrategyInputUpdate {
  Candle candle = 1;
}

message StrategyOutput {
  oneof type {
    StrategyOutputSignal signal = 1;
    StrategyOutputState state = 2;
  }
}

message StrategyOutputSignal {
  int32 kind = 1;
  double confidence = 2;
}

message StrategyOutputState {
  string state = 1;
  string debug = 2;
}

message Candle {
  int32 market = 1;
  int32 symbolId = 2;
  int32 interval = 3;
  google.protobuf.Timestamp ts = 4;
  double open = 5;
  double high = 6;
  double low = 7;
  double close = 8;
  double volume = 9;
}
