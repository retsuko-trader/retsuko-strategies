using Retsuko.Strategies.Core;
using Retsuko.Strategies.Indicators;

namespace Retsuko.Strategies.Tests;

internal class IndicatorTest {
  public static void Run() {
    // TestCCI();
    // TestRSI();
    // TestEMA();
    // TestMACD();
  }

  private static void TestIndicator(
    int[] prices,
    double[] expectedValues,
    Func<IIndicator> indicatorFactory,
    int precision = 6
  ) {
    TestIndicator(
      [],
      [],
      prices,
      expectedValues,
      indicatorFactory,
      precision
    );
  }

  private static void TestIndicator(
    int[] highs,
    int[] lows,
    int[] closes,
    double[] expectedValues,
    Func<IIndicator> indicatorFactory,
    int precision = 6
  ) {
    var indicator = indicatorFactory();

    for (int i = 0; i < highs.Length; i++) {
      indicator.Update(new Candle {
        High = highs[i],
        Low = lows[i],
        Close = closes[i],
      });

      var expected = Math.Round(expectedValues[i], precision);
      var actual = Math.Round(indicator.Value, precision);
      if (expected != actual) {
        throw new Exception($"Indicator value mismatch at index {i}: expected {expected}, got {actual}");
      }
    }
  }

  public static void TestCCI() {
    int[] high = [86, 85, 90, 95, 58, 71, 84, 98, 99, 100, 91, 95, 99, 96, 96, 90, 79, 72, 91, 81, 94, 87, 60, 93, 75, 94, 75, 93, 92, 92, 99, 99, 84, 91, 27, 67, 97, 92, 89];
    int[] low = [1, 5, 14, 10, 20, 10, 1, 48, 64, 0, 0, 50, 15, 0, 4, 57, 1, 11, 9, 1, 1, 10, 25, 11, 16, 50, 7, 13, 74, 71, 59, 3, 1, 1, 0, 5, 1, 60, 6];
    int[] close = [81, 24, 75, 21, 34, 25, 72, 92, 99, 2, 86, 80, 76, 8, 87, 75, 32, 65, 41, 9, 13, 26, 56, 28, 65, 58, 17, 90, 87, 86, 99, 3, 70, 1, 27, 9, 92, 68, 9];

    TestIndicator(
      high,
      low,
      close,
      [0, 0, 0, 0, 0, 0, 0, 165.258216, 137.978495, -78.352249, 23.011844, 66.039216, 11.260054, -110.755556, 2.108795, 60.958054, -79.830149, -40.800225, -42.00627, -103.175918, -58.657244, -37.232704, 12.844037, 31.25, 101.960784, 187.096774, -82.539683, 114.047867, 147.875064, 101.075269, 88.888889, -108.039098, -43.914081, -87.872763, -113.138686, -68.525669, 43.243243, 82.481254, -29.942756],
      () => new Indicator.CCIIndicator(8, 0.015)
    );

    TestIndicator(
      high,
      low,
      close,
      [0, 0, 0, 0, 0, 0, 0, 0, 0, -81.681682, 28.953557, 78.940028, 27.948194, -82.58317, 17.665798, 57.71725, -100.171969, -36.79078, -33.502538, -113.08642, -70.175439, -36.995092, 7.30897, -20.757021, 51.239669, 200, -99.574468, 134.51119, 166.021297, 117.174281, 100.395257, -94.147583, -33.202614, -101.396478, -115.00256, -71.976401, 27.092846, 53.157122, -49.211356],
      () => new Indicator.CCIIndicator(10, 0.015)
    );

    TestIndicator(
      high,
      low,
      close,
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 91.97995, 35.138387, -86.288416, 30.06993, 67.713787, -85.863874, -44.274809, -51.105651, -102.536873, -68.659725, -49.02507, -14.705882, -21.217712, 42.461538, 122.124711, -94.10628, 146.91745, 197.464342, 135.599506, 111.925175, -80.55041, -23.476298, -99.837574, -126.229111, -84.671533, 30.350877, 58.954584, -61.147046],
      () => new Indicator.CCIIndicator(12, 0.015)
    );

    Console.WriteLine("CCI tests passed.");
  }

  public static void TestRSI() {
    int[] prices = [81, 24, 75, 21, 34, 25, 72, 92, 99, 2, 86, 80, 76, 8, 87, 75, 32, 65, 41, 9, 13, 26, 56, 28, 65, 58, 17, 90, 87, 86, 99, 3, 70, 1, 27, 9, 92, 68, 9];

    TestIndicator(
      prices,
      [0, 0, 47.22222222222223, 23.611111111111114, 38.43283582089553, 30.294117647058826, 78.2967032967033, 86.31639722863741, 89.12844036697248, 13.311866264730071, 64.95013850415512, 59.85653017461453, 54.19016363132106, 12.8454188854557, 68.56748255340673, 57.41553886370404, 26.512530826658676, 59.75774345724092, 36.04149739852744, 17.51008036340795, 26.905774699598737, 58.00044863973779, 85.82728624443239, 38.371227493966536, 74.96090570884536, 61.21019495608749, 19.438903652597787, 76.51344601664712, 72.30324117451528, 69.74473974944168, 84.24228523539779, 10.429850167468388, 59.707866801087974, 27.99023519523047, 48.57675474701421, 34.80106793288934, 81.96579567492182, 57.78953245436237, 23.585658801479056],
      () => new Indicator.RSIIndicator(2)
    );

    TestIndicator(
      prices,
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49.44320712694878, 42.432667245873155, 51.2017782300719, 49.94116787991835, 45.55663590860508, 49.284333951746184, 46.74501674557244, 43.4860123510052, 44.01823674189631, 45.82704797004994, 49.90209564896179, 46.351969981868436, 51.34208640997234, 50.37501845071388, 44.96351306736635, 54.464714123844956, 54.04642006918241, 53.895901697369816, 55.6476477612053, 42.60631369413207, 51.2964732419777, 43.83906729252931, 47.00600661743475, 45.08586375053323, 54.44633399991266, 51.6681674437389, 45.44886082103851],
      () => new Indicator.RSIIndicator(12)
    );

    TestIndicator(
      prices,
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 46.44444444444444, 50.61070579555701, 50.44298978067838, 50.385107396174675, 51.143071170125296, 45.77270174725033, 49.6130641968312, 46.115177339098764, 47.56394036014283, 46.660676933508505, 51.11283316502063, 49.861270146262456, 46.92369439491447],
      () => new Indicator.RSIIndicator(26)
    );

    Console.WriteLine("RSI tests passed.");
  }

  public static void TestEMA() {
    int[] prices = [81, 24, 75, 21, 34, 25, 72, 92, 99, 2, 86, 80, 76, 8, 87, 75, 32, 65, 41, 9, 13, 26, 56, 28, 65, 58, 17, 90, 87, 86, 99, 3, 70, 1, 27, 9, 92, 68, 9];

    TestIndicator(
      prices,
      [81, 70.63636363636363, 71.4297520661157, 62.26070623591284, 57.12239601120141, 51.28196037280115, 55.04887666865549, 61.767262728899944, 68.53685132364541, 56.43924199207351, 61.81392526624197, 65.12048430874341, 67.09857807079005, 56.35338205791913, 61.92549441102474, 64.30267724538388, 58.42946320076862, 59.624106255174325, 56.2379051178699, 47.649195096439, 41.349341442541004, 38.55855208935173, 41.72972443674232, 39.233410902789174, 43.91824528410023, 46.47856432335473, 41.118825355472055, 50.00631165447713, 56.73243680820856, 62.053811933988825, 68.77130067326358, 56.81288236903384, 59.21054012011859, 48.626805552824294, 44.69465908867441, 38.204721072551784, 47.985680877542364, 51.62464799071648, 43.874711992404386],
      () => new Indicator.EMAIndicator(10)
    );

    TestIndicator(
      prices,
      [81, 72.23076923076923, 72.65680473372781, 64.709604005462, 59.98504954308323, 54.602734228762735, 57.27923665510693, 62.620892554321244, 68.2176783151949, 58.030343189780304, 62.33336731442949, 65.05131080451726, 66.73572452689922, 57.69945921506857, 62.20723472044264, 64.17535245575915, 59.2252982317962, 60.11371388844294, 57.173142520990176, 49.761889825453224, 44.10621446769119, 41.320643011123316, 43.57900562479665, 41.182235528674084, 44.84650698580115, 46.87012129567789, 42.27471801941975, 49.61706909335518, 55.368289232839, 60.080860120094535, 66.06842010161846, 56.365586239831, 58.46318835678008, 49.62269784035237, 46.14228278799047, 40.42808543599194, 48.36222613814702, 51.383422116893634, 44.86289563737154],
      () => new Indicator.EMAIndicator(12)
    );

    TestIndicator(
      prices,
      [81, 76.77777777777777, 76.64609053497942, 72.52415790275873, 69.67051657662846, 66.36158942280413, 66.77924946555937, 68.64745320885127, 70.89579000819562, 65.79239815573669, 67.28925755160805, 68.2307940292667, 68.80629076783954, 64.30212108133291, 65.98344544567863, 66.65133837562836, 64.08457257002625, 64.15238200928357, 62.43739074933664, 58.479065508645036, 55.11024584133799, 52.95393133457221, 53.17956605052982, 51.314413009749835, 52.32816019421281, 52.748296476122974, 50.10027451492868, 53.05580973604507, 55.57019420004173, 57.82425388892753, 60.874309156414384, 56.58732329297628, 57.58085490090396, 53.38968046379996, 51.4348893183333, 48.29156418364194, 51.52922609596476, 52.74928342218959, 49.50859576128666],
      () => new Indicator.EMAIndicator(26)
    );

    Console.WriteLine("EMA tests passed.");
  }

  public static void TestMACD() {
    int[] prices = [81, 24, 75, 21, 34, 25, 72, 92, 99, 2, 86, 80, 76, 8, 87, 75, 32, 65, 41, 9, 13, 26, 56, 28, 65, 58, 17, 90, 87, 86, 99, 3, 70, 1, 27, 9, 92, 68, 9];

    TestIndicator(
      prices,
      [0, -3.6376068376068362, -2.4639072734799217, -5.031340295620034, -5.521802745494824, -6.076152724792792, -3.053848272963074, 0.33568310636747434, 2.9473056543174314, -1.7093100949105917, 0.8774837070937913, 2.1231125756183227, 2.585623647541957, -1.5571775822256484, 1.0154188470421683, 1.8525149219271597, -0.42461879714695083, 0.3167899361939739, -0.7270321370494885, -3.3439676735158663, -4.504658691176687, -4.107132512783021, -1.6595236920538383, -1.7529125979171347, 0.7180893397975616, 1.8572538942113148, -0.07210193668202258, 3.4517711329096086, 5.350885446717413, 6.247517316069724, 7.3480176240854345, 1.5457357005888681, 2.1198449676882127, -2.0235768893083987, -2.839360636962912, -4.3281862834160645, 0.2946340051329588, 1.6766181261237905, -1.2825765539962966],
      () => new Indicator.MACDIndicator(12, 26, 9)
    );

    Console.WriteLine("MACD tests passed.");
  }
}
